name: build-push-image
on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-app-image:
    name: Build and publish deep-nlp core image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        python-version:
          - 3.10.6
        database-name:
          - deepl_core
        database-user:
          - postgres
        database-password:
          - postgres
        database-hostname:
          - localhost
        database-port:
          - 5432
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_DB: ${{ matrix.database-name }}
          POSTGRES_USER: ${{ matrix.database-user }}
          POSTGRES_PASSWORD: ${{ matrix.database-password }}
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options:
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      DATABASE_NAME: ${{ matrix.database-name }}
      DATABASE_USER: ${{ matrix.database-user }}
      DATABASE_PASSWORD: ${{ matrix.database-password }}
      DATABASE_HOSTNAME: ${{ matrix.database-hostname }}
      DATABASE_PORT: ${{ matrix.database-port }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2.3.1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Test
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade poetry
          poetry install
          poetry run python manage.py migrate
          poetry run pytest --cov .
          poetry run coverage xml

      - name: Login to container registry
        uses: docker/login-action@v2.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v2
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
