name: test
on:
  push:
    branches:
      - *

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-app-image:
    name: Build and publish deep-nlp core image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        python-version:
          - 3.10.6
        database-name:
          - deepl_core
        database-user:
          - postgres
        database-password:
          - postgres
        database-hostname:
          - localhost
        database-port:
          - 5432
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_DB: ${{ matrix.database-name }}
          POSTGRES_USER: ${{ matrix.database-user }}
          POSTGRES_PASSWORD: ${{ matrix.database-password }}
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options:
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      POSTGRES_DB: ${{ matrix.database-name }}
      POSTGRES_USER: ${{ matrix.database-user }}
      POSTGRES_PASSWORD: ${{ matrix.database-password }}
      POSTGRES_HOSTNAME: ${{ matrix.database-hostname }}
      POSTGRES_PORT: ${{ matrix.database-port }}

      REDIS_HOST: redis
      # Django
      DEBUG: false
      DJANGO_SECRET_KEY: insecure-key-just-for-testing
      ALLOWED_HOSTS: ''
      ENVIRONMENT: 'CI'
      CSRF_TRUSTED_ORIGINS: ''

      # Celery
      CELERY_BROKER_URL: ''
      CELERY_RESULT_BACKEND: ''

      # Cron
      CRON_DEEP_FETCH_MINUTE: 0
      CRON_DEEP_FETCH_HOUR: '*'
      CRON_CREATE_INDICES_MINUTE: 0
      CRON_CREATE_INDICES_HOUR: '*'

      # DEEP
      DEEP_DB_PASSWORD: ''
      DEEP_DB_NAME: ''
      DEEP_DB_USER: ''
      DEEP_DB_PORT: ''
      DEEP_DB_HOST: ''

      # SENTRY
      SENTRY_DSN: ''

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2.3.1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install enchant
        run: |
          sudo apt install enchant-2
          python -m pip install --upgrade pip pyenchant

      - name: Test
        run: |
          python -m pip install --upgrade poetry
          poetry install
          poetry run python manage.py migrate
          poetry run pytest --cov .
          poetry run coverage xml
