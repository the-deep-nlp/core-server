# Generated by Django 4.1.7 on 2023-03-09 07:14

import django.contrib.postgres.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0003_remove_classificationmodel_extra_info_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='AllProjectPerfMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('categories', models.CharField(blank=True, max_length=250)),
                ('precision', models.FloatField(blank=True, null=True)),
                ('recall', models.FloatField(blank=True, null=True)),
                ('f1score', models.FloatField(blank=True, null=True)),
                ('support', models.FloatField(blank=True, null=True)),
                ('generated_at', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='CategoryWiseMatchRatios',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sectors_completely_matched', models.FloatField(blank=True, null=True)),
                ('sectors_missing', models.FloatField(blank=True, null=True)),
                ('sectors_wrong', models.FloatField(blank=True, null=True)),
                ('subpillars_1d_completely_matched', models.FloatField(blank=True, null=True)),
                ('subpillars_1d_missing', models.FloatField(blank=True, null=True)),
                ('subpillars_1d_wrong', models.FloatField(blank=True, null=True)),
                ('subpillars_2d_completely_matched', models.FloatField(blank=True, null=True)),
                ('subpillars_2d_missing', models.FloatField(blank=True, null=True)),
                ('subpillars_2d_wrong', models.FloatField(blank=True, null=True)),
                ('entry_id', models.PositiveIntegerField()),
                ('project_id', models.PositiveIntegerField()),
                ('generated_at', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='ComputedFeatureDrift',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference_project_id', models.PositiveIntegerField()),
                ('current_project_id', models.PositiveIntegerField()),
                ('reference_dataset_len', models.PositiveIntegerField(blank=True, null=True)),
                ('current_dataset_len', models.PositiveIntegerField(blank=True, null=True)),
                ('drift_share', models.BooleanField()),
                ('number_of_columns', models.PositiveIntegerField(blank=True, null=True)),
                ('number_of_drifted_columns', models.PositiveIntegerField(blank=True, null=True)),
                ('share_of_drifted_columns', models.FloatField(blank=True, null=True)),
                ('dataset_drift', models.BooleanField()),
                ('generated_at', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='ProjectWiseMatchRatios',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_id', models.PositiveIntegerField()),
                ('sectors_completely_matched_mean', models.FloatField(blank=True, null=True)),
                ('sectors_missing_mean', models.FloatField(blank=True, null=True)),
                ('sectors_wrong_mean', models.FloatField(blank=True, null=True)),
                ('subpillars_1d_completely_matched_mean', models.FloatField(blank=True, null=True)),
                ('subpillars_1d_missing_mean', models.FloatField(blank=True, null=True)),
                ('subpillars_1d_wrong_mean', models.FloatField(blank=True, null=True)),
                ('subpillars_2d_completely_matched_mean', models.FloatField(blank=True, null=True)),
                ('subpillars_2d_missing_mean', models.FloatField(blank=True, null=True)),
                ('subpillars_2d_wrong_mean', models.FloatField(blank=True, null=True)),
                ('generated_at', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='ProjectWisePerfMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_id', models.PositiveIntegerField()),
                ('sectors_f1score', models.FloatField(blank=True, null=True)),
                ('sectors_precision', models.FloatField(blank=True, null=True)),
                ('sectors_recall', models.FloatField(blank=True, null=True)),
                ('sectors_support', models.FloatField(blank=True, null=True)),
                ('subpillars_1d_f1score', models.FloatField(blank=True, null=True)),
                ('subpillars_1d_precision', models.FloatField(blank=True, null=True)),
                ('subpillars_1d_recall', models.FloatField(blank=True, null=True)),
                ('subpillars_1d_support', models.FloatField(blank=True, null=True)),
                ('subpillars_2d_f1score', models.FloatField(blank=True, null=True)),
                ('subpillars_2d_precision', models.FloatField(blank=True, null=True)),
                ('subpillars_2d_recall', models.FloatField(blank=True, null=True)),
                ('subpillars_2d_support', models.FloatField(blank=True, null=True)),
                ('generated_at', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='TagWisePerfMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tags', models.CharField(blank=True, max_length=250)),
                ('precision', models.FloatField(blank=True, null=True)),
                ('recall', models.FloatField(blank=True, null=True)),
                ('f1score', models.FloatField(blank=True, null=True)),
                ('support', models.IntegerField(blank=True, null=True)),
                ('generated_at', models.DateTimeField()),
            ],
        ),
        migrations.RenameField(
            model_name='classificationmodel',
            old_name='url',
            new_name='model_uri',
        ),
        migrations.RemoveField(
            model_name='classificationpredictions',
            name='nlp_en_predictions',
        ),
        migrations.RemoveField(
            model_name='classificationpredictions',
            name='nlp_es_predictions',
        ),
        migrations.RemoveField(
            model_name='classificationpredictions',
            name='nlp_fr_predictions',
        ),
        migrations.RemoveField(
            model_name='classificationpredictions',
            name='nlp_pt_predictions',
        ),
        migrations.RemoveField(
            model_name='classificationpredictions',
            name='original_en_predictions',
        ),
        migrations.RemoveField(
            model_name='classificationpredictions',
            name='original_es_predictions',
        ),
        migrations.RemoveField(
            model_name='classificationpredictions',
            name='original_fr_predictions',
        ),
        migrations.RemoveField(
            model_name='classificationpredictions',
            name='original_pt_predictions',
        ),
        migrations.RemoveField(
            model_name='entry',
            name='excerpt_es',
        ),
        migrations.RemoveField(
            model_name='entry',
            name='excerpt_fr',
        ),
        migrations.RemoveField(
            model_name='entry',
            name='excerpt_pt',
        ),
        migrations.RemoveField(
            model_name='entry',
            name='nlp_af_tags',
        ),
        migrations.AddField(
            model_name='classificationmodel',
            name='train_data_uri',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='classificationpredictions',
            name='affected_groups',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=100), blank=True, null=True, size=None),
        ),
        migrations.AddField(
            model_name='classificationpredictions',
            name='age',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=100), blank=True, null=True, size=None),
        ),
        migrations.AddField(
            model_name='classificationpredictions',
            name='gender',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=100), blank=True, null=True, size=None),
        ),
        migrations.AddField(
            model_name='classificationpredictions',
            name='sectors',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=100), blank=True, null=True, size=None),
        ),
        migrations.AddField(
            model_name='classificationpredictions',
            name='severity',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=100), blank=True, null=True, size=None),
        ),
        migrations.AddField(
            model_name='classificationpredictions',
            name='specific_needs_groups',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=100), blank=True, null=True, size=None),
        ),
        migrations.AddField(
            model_name='classificationpredictions',
            name='subpillars_1d',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=100), blank=True, null=True, size=None),
        ),
        migrations.AddField(
            model_name='classificationpredictions',
            name='subpillars_2d',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=100), blank=True, null=True, size=None),
        ),
        migrations.AlterField(
            model_name='classificationmodel',
            name='description',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='classificationpredictions',
            name='embeddings',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(blank=True), blank=True, null=True, size=None),
        ),
        migrations.AlterField(
            model_name='deepdatafetchtracker',
            name='last_fetched_af_created_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='deepdatafetchtracker',
            name='last_fetched_org_created_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AlterUniqueTogether(
            name='classificationmodel',
            unique_together={('name', 'version', 'model_uri')},
        ),
    ]
